:root {
  --color-primary-100: #FFCCBC;
  --color-primary-200: #FFAA91;
  --color-primary: #FF8A65;
  --color-primary-400: #F6744C;
  --color-primary-500: #E96139;
  --color-secondary-100: #B0EBE4;
  --color-secondary-200: #77E0D3;
  --color-secondary: #21D2BF;
  --color-secondary-400: #00C6b0;
  --color-secondary-500: #00B9A0;
  --color-on-surface: #000000;
  --color-on-surface-trans: #00000099;
  --color-surface: #FFFFFF;
  --color-error: #B00020;
  --color-red: #EB5757;
  --color-orange: #F2994A;
  --color-yellow: #F2C94C;
  --color-green: #2FAE60;
  --color-blue: #2F80ED;
  --color-purple: #9B51E0;
  --logo-blend: multiply;
}

/*@media (prefers-color-scheme: dark) {*/
/*  :root {*/
/*    --color-primary-100: #FAEDEB;*/
/*    --color-primary-200: #FDD4C7;*/
/*    --color-primary: #FEB9A3;*/
/*    --color-primary-400: #FF9E7C;*/
/*    --color-primary-500: #FF885B;*/
/*    --color-secondary-100: #E0F8F7;*/
/*    --color-secondary-200: #B2EEE8;*/
/*    --color-secondary: #7AE4D9;*/
/*    --color-secondary-400: #3AD7C8;*/
/*    --color-secondary-500: #00CBB9;*/
/*    --color-on-surface: #FFFFFF;*/
/*    --color-on-surface-trans: #FFFFFF99;*/
/*    --color-surface: #121212;*/
/*    --color-surface-elevation-1: #1E1E1E;*/
/*    --color-surface-elevation-2: #232323;*/
/*    --color-surface-elevation-3: #252525;*/
/*    --color-surface-elevation-4: #272727;*/
/*    --color-surface-elevation-6: #2C2C2C;*/
/*    --color-surface-elevation-8: #2E2E2E;*/
/*    --color-surface-elevation-12: #333333;*/
/*    --color-surface-elevation-16: #363636;*/
/*    --color-surface-elevation-24: #383838;*/
/*    --color-error: #CF6679;*/
/*    --color-red: #F39B9B;*/
/*    --color-orange: #F7C192;*/
/*    --color-yellow: #F7DE92;*/
/*    --color-green: #8AE5B1;*/
/*    --color-blue: #77ACF3;*/
/*    --color-purple: #C193EC;*/
/*    --logo-blend: screen;*/
/*  }*/
/*}*/

@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css?family=Rubik:400,500&display=swap');
@import url('https://fonts.googleapis.com/icon?family=Material+Icons');
@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');

html {
  @apply font-body
}

/*
 * Define text styles
 */

.headline-1 {
  @apply text-headline-1;
  @apply font-light;
  letter-spacing: -0.09375em;
}

.headline-2 {
  @apply text-headline-2;
  @apply font-light;
  letter-spacing: -0.03125em;
}

.headline-3 {
  @apply text-headline-3;
}

.headline-4 {
  @apply text-headline-4;
}

.headline-5 {
  @apply text-headline-5;
  letter-spacing: 0.01125em;
}

.headline-6 {
  @apply text-headline-6;
  @apply font-medium;
  letter-spacing: 0.009375em;
}

.subtitle-1 {
  @apply text-subtitle-1;
  letter-spacing: 0.009375em;
}

.subtitle-2 {
  @apply text-subtitle-2;
  @apply font-medium;
  letter-spacing: 0.00625em;
}

.body-1 {
  @apply text-body-1;
  letter-spacing: 0.03125em;
}

.body-2 {
  @apply text-body-2;
  letter-spacing: 0.015625em;
}

.button {
  @apply text-button;
  @apply uppercase;
  @apply font-medium;
  letter-spacing: 0.078125em;
}

.caption {
  @apply text-caption;
  @apply tracking-wide;
}

.overline {
  @apply text-overline;
  @apply uppercase;
  letter-spacing: 0.09375em;
}


.logo>svg>g>rect{
  mix-blend-mode: var(--logo-blend);
  fill: var(--color-secondary);
}

.logo>svg>g>circle{
  mix-blend-mode: var(--logo-blend);
  fill: var(--color-primary);
/* component definitions */
}

.inputText {
  @apply absolute;
  height: 24px;
  left: 16px;
  top: 16px;
  @apply subtitle-1;
}

.assistiveText {
  position: absolute;
  height: 16px;
  left: 16px;
  right: 200px;
  top: 59px;

  font-family: Roboto;
  font-style: normal;
  font-weight: normal;
  font-size: 12px;
  line-height: 16px;

  letter-spacing: 0.4px;
}

.textFieldOutline {
  @apply absolute;
  left: 0%;
  right: 0%;
  top: 0%;
  bottom: 22.22%;
}

.inputLabel{
position: absolute;
height: 16px;
left: 16px;
top: -8px;

font-family: Roboto;
font-style: normal;
font-weight: normal;
font-size: 12px;
line-height: 16px;

letter-spacing: 0.4px;
}

@keyframes toLabel {
  from {@apply inputText;}
  to {@apply inputLabel;}
}

@keyframes toPlaceHolder {
  from {@apply inputLabel;}
  to {@apply inputText;}
}

.toLabel{
  animation-name: toLabel;
  animation-duration: 0.1s;
}

.toPlaceHolder{
  animation-name: toPlaceHolder;
  animation-duration: 0.1s;
}
